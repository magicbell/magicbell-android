name: Gradle Build, Tests and Publish

# Runs on Pull Requests and on the `main` branch after the `changeset` workflow ran (see `publish` job)
on:
  workflow_run:
    workflows: [ Changeset ]
    types:
      - completed
  pull_request:

jobs:
  
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
    
    - name: Adding Google Services
      env:
        DATA: ${{ secrets.GOOGLE_SERVICES }}
      run: echo $DATA | base64 -di > ./example/google-services.json

    - name: Build with Gradle Wrapper
      run: echo "FAKE -- BUILD"
      # run: ./gradlew build -xlint

  
  test:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
    needs: [ "build" ]
    steps:
    - name: Test with Gradle Wrapper
      run: echo "FAKE -- TEST"
      # run: ./gradlew test

    # - name: Publish Test Report
    #   uses: mikepenz/action-junit-report@v4
    #   if: success() || failure() # always run even if the previous step fails
    #   with:
    #     report_paths: '**/build/test-results/test*/TEST-*.xml'

  lint:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
    needs: [ "build" ]
    steps:
    - name: Lint with Gradle Wrapper
      run: echo "FAKE -- LINT"
      # run: ./gradlew lint
    # - name: Publish Lint Report
    #   uses: yutailang0119/action-android-lint@v4
    #   if: success() || failure() # always run even if the previous step fails
    #   with:
    #     report-path: '**/build/reports/lint-results-*.xml'
    #     ignore-warnings: false
    #   continue-on-error: false # If annotations contain error of severity, action-android-lint exit 1.
  
  

  publish:
    runs-on: ubuntu-latest
    needs: [ "build", "test", "lint" ]
    steps:
    - name: Publish to Maven
      run: echo "FAKE - PUBLISH"

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    needs: ["publish"] # only submit dependencies for published releases
    
    steps:
    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      run: echo "FAKE - DEPENDENCY SUBMISSION"
    #   uses: gradle/actions/dependency-submission@v4
    #   with:
    #     cache-read-only: true
